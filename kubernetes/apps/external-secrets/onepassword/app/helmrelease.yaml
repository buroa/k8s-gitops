---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: onepassword
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      onepassword:
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        # WORKAROUND: OnePassword Connect has a bug where credentials need to be double base64 encoded
        # When they fix this bug, remove this init container and the volume mount workaround
        # Issue: "illegal base64 data at input byte 0" in sync container logs
        initContainers:
          fix-credentials:
            image:
              repository: docker.io/alpine
              tag: 3.20
            command:
              - /bin/sh
              - -c
              - |
                echo "Applying double base64 encoding workaround for OnePassword Connect credentials bug..."
                cat /raw-config/1password-credentials.json | base64 -w 0 > /config/1password-credentials.json
                echo "Credentials processed successfully"
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
        containers:
          api:
            image:
              repository: docker.io/1password/connect-api
              tag: 1.7.3@sha256:0601c7614e102eada268dbda6ba4b5886ce77713be2c332ec6a2fd0f028484ba
            env:
              XDG_DATA_HOME: &configDir /config
              OP_HTTP_PORT: &apiPort 80
              OP_BUS_PORT: 11220
              OP_BUS_PEERS: localhost:11221
              # WORKAROUND: Read from processed file instead of secret due to double encoding bug
              OP_SESSION: /config/1password-credentials.json
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /heartbeat
                    port: *apiPort
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *apiPort
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
            resources: &resources
              requests:
                cpu: 10m
              limits:
                memory: 64Mi
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
          sync:
            image:
              repository: docker.io/1password/connect-sync
              tag: 1.7.3@sha256:2f17621c7eb27bbcb1f86bbc5e5a5198bf54ac3b9c2ffac38064d03c932b07d5
            env:
              XDG_DATA_HOME: *configDir
              OP_HTTP_PORT: &syncPort 8081
              OP_BUS_PORT: 11221
              OP_BUS_PEERS: localhost:11220
              # WORKAROUND: Read from processed file instead of secret due to double encoding bug
              OP_SESSION: /config/1password-credentials.json
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /heartbeat
                    port: *syncPort
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *syncPort
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
            resources: *resources
            securityContext: *securityContext
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        runAsGroup: 999
    persistence:
      config:
        type: emptyDir
        globalMounts:
          - path: *configDir
      # WORKAROUND: Mount original credentials for init container processing
      raw-config:
        type: secret
        name: "{{ .Release.Name }}-secret"
        globalMounts:
          - path: /raw-config
            readOnly: true
    service:
      app:
        ports:
          http:
            port: *apiPort
