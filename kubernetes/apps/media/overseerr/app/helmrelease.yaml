---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app overseerr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        containers:
          main:
            image:
              repository: ghcr.io/sct/overseerr
              tag: 1.33.2@sha256:714ea6db2bc007a2262d112bef7eec74972eb33d9c72bddb9cbd98b8742de950
            env:
              TZ: ${TIMEZONE}
              LOG_LEVEL: info
              PORT: &port 5055
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: &path /api/v1/status
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 2Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
    ingress:
      main:
        enabled: true
        className: external
        annotations:
          gatus.io/enabled: "true"
          gatus.io/path: *path
          hajimari.io/icon: mdi:eye-circle
          hajimari.io/url: https://requests.${PUBLIC_DOMAIN}
          external-dns.alpha.kubernetes.io/target: external.${PUBLIC_DOMAIN}
        hosts:
          - host: &host "{{ .Release.Name }}.${PUBLIC_DOMAIN}"
            paths: &paths
              - path: /
                service:
                  name: main
                  port: http
          - host: &customHost requests.${PUBLIC_DOMAIN}
            paths: *paths
        tls:
          - hosts:
              - *host
              - *customHost
    persistence:
      cache:
        type: emptyDir
        globalMounts:
          - path: /.cache
      config:
        enabled: true
        existingClaim: *app
        globalMounts:
          - path: /app/config
      tmp:
        type: emptyDir
      yarn:
        type: emptyDir
        globalMounts:
          - path: /.yarn
    service:
      main:
        ports:
          http:
            port: *port
