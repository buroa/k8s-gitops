---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app wizarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        containers:
          main:
            image:
              repository: ghcr.io/wizarrrr/wizarr
              tag: 3.5.2
            env:
              TZ: ${TIMEZONE}
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/health
                    port: &port 5690
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                cpu: 10m
                memory: 250M
              limits:
                memory: 512M
    ingress:
      main:
        enabled: true
        className: external
        annotations:
          gatus.io/enabled: "true"
          hajimari.io/icon: mdi:invite
          external-dns.alpha.kubernetes.io/target: external.${PUBLIC_DOMAIN}
        hosts:
          - host: &host "{{ .Release.Name }}.${PUBLIC_DOMAIN}"
            paths: &paths
              - path: /
                service:
                  name: main
                  port: http
          - host: &customHost invite.${PUBLIC_DOMAIN}
            paths: *paths
        tls:
          - hosts:
              - *host
              - *customHost
    persistence:
      config:
        enabled: true
        existingClaim: *app
        globalMounts:
          - path: /data/database
    service:
      main:
        ports:
          http:
            port: *port
