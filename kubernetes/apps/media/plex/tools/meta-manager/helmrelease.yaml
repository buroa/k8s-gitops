---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app plex-meta-manager
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      plex-meta-manager:
        type: cronjob
        cronjob:
          schedule: "@daily"
          timeZone: &timeZone ${TIMEZONE}
          concurrencyPolicy: Forbid
          successfulJobsHistory: 1
          failedJobsHistory: 1
        containers:
          app:
            image:
              repository: docker.io/meisnate12/plex-meta-manager
              tag: v1.21.0@sha256:219f11238c78080e9f76fdcb80a95d8724d4fdf3df6dba3dcbc87ad82d45fd4c
            command:
              - /bin/sh
              - -c
            args:
              - |
                python3 plex_meta_manager.py --run --read-only-config --run-libraries "Movies";
                python3 plex_meta_manager.py --run --read-only-config --run-libraries "TV Shows";
            env:
              TZ: *timeZone
            envFrom:
              - secretRef:
                  name: plex-meta-manager-secret
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 8Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
    persistence:
      config:
        existingClaim: *app
      config-file:
        type: configMap
        name: plex-meta-manager-configmap
        globalMounts:
          - path: /config/config.yml
            subPath: config.yml
            readOnly: true
      logs:
        type: emptyDir
        globalMounts:
          - path: /config/logs
