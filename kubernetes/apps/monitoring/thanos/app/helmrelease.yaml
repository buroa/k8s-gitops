---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: thanos
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: thanos
      version: 12.4.2
      sourceRef:
        kind: HelmRepository
        name: bitnami-charts
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    objstoreConfig:
      type: s3
      config:
        insecure: true
    query:
      enabled: true
      podAntiAffinityPreset: hard
      replicaLabel: ["__replica__"] # must match with kube-prometheus-stack value `.prometheus.prometheusSpec.replicaExternalLabelName
      dnsDiscovery:
        sidecarsService: kube-prometheus-stack-thanos-discovery
        sidecarsNamespace: monitoring
      ingress:
        enabled: true
        hostname: "thanos.${SECRET_PUBLIC_DOMAIN}"
        annotations:
          kubernetes.io/tls-acme: "true"
          kubernetes.io/ingress.class: contour
          cert-manager.io/cluster-issuer: letsencrypt-prod
          ingress.kubernetes.io/force-ssl-redirect: "true"
          projectcontour.io/websocket-routes: "/"
          hajimari.io/appName: Thanos
          hajimari.io/icon: material-symbols:health-metrics
        tls: true
      replicaLabels:
        - replica
      resources:
        requests:
          cpu: 15m
          memory: 64M
        limits:
          memory: 4096Mi
    queryFrontend:
      enabled: false
    bucketweb:
      enabled: true
      resources:
        requests:
          cpu: 15m
          memory: 64M
        limits:
          memory: 4096Mi
    compactor:
      enabled: true
      extraFlags:
        - "--compact.concurrency"
        - "4"
      retentionResolutionRaw: 14d
      retentionResolution5m: 14d
      retentionResolution1h: 30d
      resources:
        requests:
          cpu: 15m
          memory: 204M
        limits:
          memory: 4096Mi
      persistence:
        enabled: true
        storageClass: "${CLUSTER_STORAGE_CLASS}"
        size: 15Gi
    storegateway:
      enabled: true
      resources:
        requests:
          cpu: 23m
          memory: 204M
        limits:
          memory: 4096Mi
      persistence:
        enabled: true
        storageClass: "${CLUSTER_STORAGE_CLASS}"
        size: 512Mi
    ruler:
      enabled: true
      alertmanagers:
        - http://kube-prometheus-stack-alertmanager.monitoring.svc.cluster.local:9093
      clusterName: k8s
      config: |-
        groups:
          - name: "PrometheusWatcher"
            rules:
              - alert: "PrometheusDown"
                expr: absent(up{job="kube-prometheus-stack-prometheus"})
      dnsDiscovery:
        enabled: true
      persistence:
        enabled: true
        storageClass: "${CLUSTER_STORAGE_CLASS}"
        size: 512Mi
      resources:
        requests:
          cpu: 23m
          memory: 94M
        limits:
          memory: 4096Mi
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
  valuesFrom:
    - kind: ConfigMap
      name: thanos-ceph-bucket
      valuesKey: BUCKET_NAME
      targetPath: objstoreConfig.config.bucket
    - kind: ConfigMap
      name: thanos-ceph-bucket
      valuesKey: BUCKET_HOST
      targetPath: objstoreConfig.config.endpoint
    - kind: ConfigMap
      name: thanos-ceph-bucket
      valuesKey: BUCKET_REGION
      targetPath: objstoreConfig.config.region
    - kind: Secret
      name: thanos-ceph-bucket
      valuesKey: AWS_ACCESS_KEY_ID
      targetPath: objstoreConfig.config.access_key
    - kind: Secret
      name: thanos-ceph-bucket
      valuesKey: AWS_SECRET_ACCESS_KEY
      targetPath: objstoreConfig.config.secret_key
