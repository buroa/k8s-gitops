---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app kromgo
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      kromgo:
        replicas: 2
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/kashalls/kromgo
              tag: v0.6.0@sha256:4b908ea0be5acd61e67ce38d8f1342d0731296b00b8ca2c35533aa519d804cc6
            env:
              PROMETHEUS_URL: http://prometheus-operated.monitoring.svc.cluster.local:9090
              HEALTH_PORT: &healthPort 8888
              SERVER_PORT: &port 8080
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /-/ready
                    port: *healthPort
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 64Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
    persistence:
      config:
        type: configMap
        name: kromgo-configmap
        globalMounts:
          - path: /kromgo/config.yaml
            subPath: config.yaml
            readOnly: true
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
          health:
            port: *healthPort
    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.ktwo.io"
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port
    serviceMonitor:
      app:
        serviceName: *app
        endpoints:
          - port: health
