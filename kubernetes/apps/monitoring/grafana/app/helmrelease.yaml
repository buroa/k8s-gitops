---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: grafana
      version: 6.52.7
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    extraInitContainers:
      - name: init-db
        image: ghcr.io/onedr0p/postgres-initdb:14.7
        imagePullPolicy: IfNotPresent
        envFrom:
          - secretRef:
              name: grafana-secret
    replicas: 3
    rbac:
      pspEnabled: false
    testFramework:
      enabled: false
    env:
      GF_ANALYTICS_CHECK_FOR_UPDATES: false
      GF_AUTH_GENERIC_OAUTH_TOKEN_URL: http://authelia.home.svc.cluster.local/api/oidc/token
      GF_AUTH_GENERIC_OAUTH_API_URL: http://authelia.home.svc.cluster.local/api/oidc/userinfo
      GF_AUTH_GENERIC_OAUTH_AUTH_URL: https://auth.${SECRET_PUBLIC_DOMAIN}/api/oidc/authorization
      GF_AUTH_GENERIC_OAUTH_CLIENT_ID: grafana
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_GRAFANA_NET_URL: https://grafana.net
      GF_LOG_FILTERS: rendering:debug
      GF_LOG_MODE: console
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      GF_SECURITY_ALLOW_EMBEDDING: true
      GF_SECURITY_COOKIE_SAMESITE: grafana
      GF_SERVER_ROOT_URL: https://grafana.${SECRET_PUBLIC_DOMAIN}
    envFromSecrets:
      - name: grafana-secret
    grafana.ini:
      auth:
        signout_redirect_url: https://auth.${SECRET_PUBLIC_DOMAIN}/logout
        oauth_auto_login: true
      auth.generic_oauth:
        enabled: true
        name: Authelia
        client_id: # Set by env vars
        client_secret: # Set by env vars secret
        auth_url: # Set by env vars
        token_url: # Set by env vars
        api_url: # Set by env vars
        scopes: "openid profile email groups"
        empty_scopes: false
        login_attribute_path: preferred_username
        groups_attribute_path: groups
        name_attribute_path: name
        use_pkce: true
      auth.generic_oauth.group_mapping:
        role_attribute_path: |
          contains(groups[*], 'admins') && 'Admin' || contains(groups[*], 'people') && 'Viewer'
        org_id: 1
      auth.basic:
        enabled: false
        disable_login_form: true
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: "default"
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
    datasources:
      datasources.yaml:
        apiVersion: 1
        deleteDatasources:
          - name: Alertmanager
            orgId: 1
          - name: Loki
            orgId: 1
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://thanos-query-frontend.monitoring.svc.cluster.local:9090
            isDefault: true
          - name: Alertmanager
            type: alertmanager
            access: proxy
            url: http://kube-prometheus-stack-alertmanager.monitoring.svc.cluster.local:9093
            jsonData:
              implementation: prometheus
          - name: Loki
            type: loki
            access: proxy
            url: http://loki-gateway.monitoring.svc.cluster.local
            jsonData:
              maxLines: 250
    dashboards:
      default:
        node-exporter-full:
          gnetId: 1860
          revision: 30
          datasource: Prometheus
        cert-manager:
          gnetId: 11001
          revision: 1
          datasource: Prometheus
        envoy:
          gnetId: 7250
          revision: 1
          datasource: Prometheus
        envoy-global:
          gnetId: 7253
          revision: 1
          datasource: Prometheus
        uptime-robot:
          gnetId: 9955
          revision: 1
          datasource: Prometheus
        loki-metrics:
          gnetId: 13407
          revision: 1
          datasource: Prometheus
        loki-chunks:
          url: https://raw.githubusercontent.com/grafana/loki/main/production/helm/loki/src/dashboards/loki-chunks.json
          datasource: Prometheus
        loki-deletion:
          url: https://raw.githubusercontent.com/grafana/loki/main/production/helm/loki/src/dashboards/loki-deletion.json
          datasource: Prometheus
        loki-logs:
          url: https://raw.githubusercontent.com/grafana/loki/main/production/helm/loki/src/dashboards/loki-logs.json
          datasource: Prometheus
        loki-mixin-recording-rules:
          url: https://raw.githubusercontent.com/grafana/loki/main/production/helm/loki/src/dashboards/loki-mixin-recording-rules.json
          datasource: Prometheus
        loki-operational:
          url: https://raw.githubusercontent.com/grafana/loki/main/production/helm/loki/src/dashboards/loki-operational.json
          datasource: Prometheus
        loki-reads-resources:
          url: https://raw.githubusercontent.com/grafana/loki/main/production/helm/loki/src/dashboards/loki-reads-resources.json
          datasource: Prometheus
        loki-reads:
          url: https://raw.githubusercontent.com/grafana/loki/main/production/helm/loki/src/dashboards/loki-reads.json
          datasource: Prometheus
        loki-retention:
          url: https://raw.githubusercontent.com/grafana/loki/main/production/helm/loki/src/dashboards/loki-retention.json
          datasource: Prometheus
        loki-writes-resources:
          url: https://raw.githubusercontent.com/grafana/loki/main/production/helm/loki/src/dashboards/loki-writes-resources.json
          datasource: Prometheus
        loki-writes:
          url: https://raw.githubusercontent.com/grafana/loki/main/production/helm/loki/src/dashboards/loki-writes.json
          datasource: Prometheus
        rook-ceph-cluster:
          gnetId: 2842
          revision: 16
          datasource: Prometheus
        rook-ceph-osd:
          gnetId: 5336
          revision: 9
          datasource: Prometheus
        rook-ceph-pools:
          gnetId: 5342
          revision: 9
          datasource: Prometheus
        redis:
          gnetId: 763
          revision: 4
          datasource: Prometheus
        unifi-client-insights:
          gnetId: 11315
          revision: 9
          datasource: Prometheus
        unifi-network-sites:
          gnetId: 11311
          revision: 5
          datasource: Prometheus
        unifi-uap-insights:
          gnetId: 11314
          revision: 10
          datasource: Prometheus
        unifi-usw-insights:
          gnetId: 11312
          revision: 9
          datasource: Prometheus
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/v0.41.2/manifests/monitoring/monitoring-config/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/v0.41.2/manifests/monitoring/monitoring-config/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2/v0.41.2/manifests/monitoring/monitoring-config/dashboards/logs.json
          datasource: Prometheus
        cilium-dashboard:
          url: https://raw.githubusercontent.com/cilium/cilium/v1.13.1/examples/kubernetes/addons/prometheus/files/grafana-dashboards/cilium-dashboard.json
          datasource: Prometheus
        cilium-operator-dashboard:
          url: https://raw.githubusercontent.com/cilium/cilium/v1.13.1/examples/kubernetes/addons/prometheus/files/grafana-dashboards/cilium-operator-dashboard.json
          datasource: Prometheus
        hubble-dashboard:
          url: https://raw.githubusercontent.com/cilium/cilium/v1.13.1/examples/kubernetes/addons/prometheus/files/grafana-dashboards/hubble-dashboard.json
          datasource: Prometheus
        api-server:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-api-server.json
          datasource: Prometheus
        coredns:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-coredns.json
          datasource: Prometheus
        global:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-global.json
          datasource: Prometheus
        namespaces:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-namespaces.json
          datasource: Prometheus
        nodes:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-nodes.json
          datasource: Prometheus
        pods:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-pods.json
          datasource: Prometheus
        thanos-bucket-replicate:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/bucket-replicate.json
          datasource: Prometheus
        thanos-compact:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/compact.json
          datasource: Prometheus
        thanos-overview:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/overview.json
          datasource: Prometheus
        thanos-query:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/query.json
          datasource: Prometheus
        thanos-query-frontend:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/query-frontend.json
          datasource: Prometheus
        thanos-receieve:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/receive.json
          datasource: Prometheus
        thanos-rule:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/rule.json
          datasource: Prometheus
        thanos-sidecar:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/sidecar.json
          datasource: Prometheus
        thanos-store:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/thanos/dashboards/store.json
          datasource: Prometheus
        cloudnative-pg:
          url: https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/main/docs/src/samples/monitoring/grafana-dashboard.json
          datasource: Prometheus
    sidecar:
      datasources:
        enabled: true
        searchNamespace: ALL
      dashboards:
        enabled: true
        searchNamespace: ALL
    plugins:
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - vonage-status-panel
    serviceMonitor:
      enabled: true
    ingress:
      enabled: true
      annotations:
        kubernetes.io/tls-acme: "true"
        kubernetes.io/ingress.class: contour
        cert-manager.io/cluster-issuer: letsencrypt-prod
        ingress.kubernetes.io/force-ssl-redirect: "true"
        projectcontour.io/websocket-routes: "/"
        hajimari.io/appName: Grafana
        hajimari.io/icon: simple-icons:grafana
      hosts:
        - &hostg grafana.${SECRET_PUBLIC_DOMAIN}
      paths:
        - /
      tls:
        - secretName: grafana-tls
          hosts:
            - *hostg
    imageRenderer:
      enabled: true
      replicas: 3
      networkPolicy:
        limitIngress: false
      serviceMonitor:
        enabled: true
