---
groups:
  #
  # zigbee2mqtt
  #
  - name: zigbee2mqtt
    rules:
      - alert: ZigbeeMQTTUnreachable
        expr: |
          sum(count_over_time({app="zigbee2mqtt"} |~ "(?i)not connected to mqtt server"[2m])) > 0
        for: 2m
        labels:
          severity: critical
          category: logs
        annotations:
          app: "{{ $labels.app }}"
          summary: "{{ $labels.app }} is unable to connect to MQTT"

  #
  # *arr
  #
  - name: arr
    rules:
      - alert: AutobrrNetworkUnhealthy
        expr: |
          sum by (app) (count_over_time({app="autobrr"} |~ "(?i)network unhealthy"[15m])) > 0
        for: 2m
        labels:
          severity: warning
          category: logs
        annotations:
          app: "{{ $labels.app }}"
          summary: "{{ $labels.app }} has a unhealthy network"

      - alert: BazarrPostgresUnreachable
        expr: |
          sum by (app) (count_over_time({app="bazarr"} |~ "(?i)Job(.+)Update(.+)from(.+)raised an exception"[1h])) > 0
        for: 2m
        labels:
          severity: critical
          category: logs
        annotations:
          app: "{{ $labels.app }}"
          summary: "{{ $labels.app }} is unable to connect to postgresql"

  #
  # plex
  #
  - name: plex
    rules:
      - alert: PlexDatabaseBusy
        expr: |
          sum by (app) (count_over_time({app="plex"} |~ "(?i)retry busy DB"[2m])) > 0
        for: 2m
        labels:
          severity: critical
          category: logs
        annotations:
          app: "{{ $labels.app }}"
          summary: "{{ $labels.app }} is experiencing database issues"

  #
  # cross-seed
  #
  - name: cross-seed
    rules:
      - alert: CrossSeedDatabaseMalformed
        expr: |
          sum by (container) (count_over_time({app="qbittorrent", container="xseed"} |~ "(?i)database disk image is malformed"[1h])) > 0
        for: 2m
        labels:
          severity: critical
          category: logs
        annotations:
          app: "{{ $labels.container }}"
          summary: "{{ $labels.container }} is experiencing database issues"

  #
  # home-assistant
  #
  - name: home-assistant
    rules:
      - alert: HomeAssistantPostgresUnreachable
        expr: |
          sum by (app) (count_over_time({app="home-assistant"} |~ "(?i)error in database connectivity"[2m])) > 0
        for: 2m
        labels:
          severity: critical
          category: logs
        annotations:
          app: "{{ $labels.app }}"
          summary: "{{ $labels.app }} is unable to connect to postgresql"

  #
  # node-red
  #
  - name: node-red
    rules:
      - alert: NodeRedHomeAssistantUnreachable
        expr: |
          sum by (app) (count_over_time({app="node-red"} |~ "(?i)home assistant.*connecting to undefined"[2m])) > 0
        for: 2m
        labels:
          severity: critical
          category: logs
        annotations:
          app: "{{ $labels.app }}"
          summary: "{{ $labels.app }} is unable to connect to home assistant"
