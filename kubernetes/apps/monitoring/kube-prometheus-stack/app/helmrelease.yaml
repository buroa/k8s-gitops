---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 56.21.3
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
  install:
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
    remediation:
      retries: 3
  values:
    cleanPrometheusOperatorObjectNames: true
    alertmanager:
      ingress:
        enabled: true
        ingressClassName: internal
        annotations:
          hajimari.io/appName: Alertmanager
          hajimari.io/icon: fluent:alert-16-filled
        hosts:
          - &host am.${PUBLIC_DOMAIN}
        paths:
          - /
        pathType: Prefix
        tls:
          - hosts:
              - *host
      alertmanagerSpec:
        replicas: 3
        useExistingSecret: true
        configSecret: alertmanager-secret
        externalUrl: https://am.${PUBLIC_DOMAIN}
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: ${CLUSTER_STORAGE_HOSTPATH}
              resources:
                requests:
                  storage: 1Gi
    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          - action: labeldrop
            regex: (uid)
          - action: labeldrop
            regex: (id|name)
          - action: drop
            sourceLabels:
              - __name__
            regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)
    kubeApiServer:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          - action: drop
            sourceLabels:
              - __name__
            regex: (apiserver|etcd|rest_client)_request(|_sli|_slo)_duration_seconds_bucket
          - action: drop
            sourceLabels:
              - __name__
            regex: (apiserver_response_sizes_bucket|apiserver_watch_events_sizes_bucket)
    kubeControllerManager:
      enabled: true
      endpoints: &endpoints
        - 10.0.0.10
        - 10.0.0.11
        - 10.0.0.12
    kubeEtcd:
      enabled: true
      endpoints: *endpoints
    kubeProxy:
      enabled: false
    kubeScheduler:
      enabled: true
      endpoints: *endpoints
    prometheus:
      ingress:
        enabled: true
        ingressClassName: internal
        annotations:
          hajimari.io/appName: Prometheus
          hajimari.io/icon: simple-icons:prometheus
        hosts:
          - &host prometheus.${PUBLIC_DOMAIN}
        paths:
          - /
        pathType: Prefix
        tls:
          - hosts:
              - *host
      thanosService:
        enabled: true
      thanosServiceMonitor:
        enabled: true
      prometheusSpec:
        replicas: 3
        replicaExternalLabelName: __replica__
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        enableAdminAPI: true
        walCompression: true
        enableFeatures:
          - auto-gomaxprocs
          - memory-snapshot-on-shutdown
          - new-service-discovery-manager
        externalUrl: https://prometheus.${PUBLIC_DOMAIN}
        thanos:
          image: quay.io/thanos/thanos:v0.34.1
          objectStorageConfig:
            existingSecret:
              name: thanos-objstore-secret
              key: objstore.yml
        retention: 2d
        retentionSize: 15GB
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: ${CLUSTER_STORAGE_HOSTPATH}
              resources:
                requests:
                  storage: 20Gi
    nodeExporter:
      enabled: true
    prometheus-node-exporter:
      fullnameOverride: node-exporter
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
    kubeStateMetrics:
      enabled: true
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
      metricLabelsAllowlist:
        - pods=[*]
        - deployments=[*]
        - persistentvolumeclaims=[*]
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
    grafana:
      enabled: false
      forceDeployDashboards: true
      sidecar:
        dashboards:
          multicluster:
            etcd:
              enabled: true
  postRenderers:
    - kustomize:
        patches:
          - target:
              version: v1
              kind: ConfigMap
              labelSelector: grafana_dashboard in (1)
            patch: |-
              apiVersion: v1
              kind: ConfigMap
              metadata:
                name: not-used
                namespace: not-used
                annotations:
                  grafana_folder: Kubernetes
