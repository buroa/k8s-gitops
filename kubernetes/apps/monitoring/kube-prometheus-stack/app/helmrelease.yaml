---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 65.3.2
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
  install:
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
    remediation:
      strategy: rollback
      retries: 3
  values:
    cleanPrometheusOperatorObjectNames: true
    alertmanager:
      ingress:
        enabled: true
        ingressClassName: internal
        annotations:
          hajimari.io/appName: Alertmanager
          hajimari.io/icon: fluent:alert-16-filled
        hosts:
          - &host am.${PUBLIC_DOMAIN}
        paths:
          - /
        pathType: Prefix
        tls:
          - hosts:
              - *host
      alertmanagerSpec:
        replicas: 3
        useExistingSecret: true
        configSecret: alertmanager-secret
        externalUrl: https://am.${PUBLIC_DOMAIN}
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: ${CLUSTER_STORAGE_HOSTPATH}
              resources:
                requests:
                  storage: 1Gi
    kubeApiServer:
      serviceMonitor:
        selector:
          k8s-app: kube-apiserver
    kubeControllerManager: &kubeControllerManager
      service:
        selector:
          k8s-app: kube-controller-manager
    kubeEtcd:
      <<: *kubeControllerManager # etcd runs on control plane nodes
    kubeProxy:
      enabled: false
    kubeScheduler:
      service:
        selector:
          k8s-app: kube-scheduler
    prometheus:
      ingress:
        enabled: true
        ingressClassName: internal
        annotations:
          hajimari.io/appName: Prometheus
          hajimari.io/icon: simple-icons:prometheus
        hosts:
          - &host prometheus.${PUBLIC_DOMAIN}
        paths:
          - /
        pathType: Prefix
        tls:
          - hosts:
              - *host
      thanosService:
        enabled: true
      thanosServiceMonitor:
        enabled: true
      prometheusSpec:
        podMetadata:
          annotations:
            secret.reloader.stakater.com/reload: &secret thanos-objstore-config
        replicas: 3
        replicaExternalLabelName: __replica__
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        enableAdminAPI: true
        walCompression: true
        enableFeatures:
          - auto-gomemlimit
          - memory-snapshot-on-shutdown
          - new-service-discovery-manager
        externalUrl: https://prometheus.${PUBLIC_DOMAIN}
        thanos:
          image: quay.io/thanos/thanos:${THANOS_VERSION}
          version: ${THANOS_VERSION#v}
          objectStorageConfig:
            existingSecret:
              name: *secret
              key: config
        retention: 2d
        retentionSize: 15GB
        resources:
          requests:
            cpu: 100m
          limits:
            memory: 4Gi
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: ${CLUSTER_STORAGE_HOSTPATH}
              resources:
                requests:
                  storage: 20Gi
    prometheus-node-exporter:
      fullnameOverride: node-exporter
      prometheus: &prometheus
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
      metricLabelsAllowlist:
        - pods=[*]
        - deployments=[*]
        - persistentvolumeclaims=[*]
      prometheus:
        <<: *prometheus
    grafana:
      enabled: false
      forceDeployDashboards: true
