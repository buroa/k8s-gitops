---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app external-dns-unifi
spec:
  interval: 1h
  chart:
    spec:
      chart: external-dns
      version: 1.15.2
      sourceRef:
        kind: HelmRepository
        name: external-dns
        namespace: flux-system
  install:
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    crds: CreateReplace
    remediation:
      strategy: rollback
      retries: 3
  values:
    fullnameOverride: *app
    domainFilters: ["ktwo.io"]
    image:
      repository: ghcr.io/buroa/external-dns
      tag: a6243325
    podAnnotations:
      reloader.stakater.com/auto: "true"
    policy: sync
    provider:
      name: webhook
      webhook:
        image:
          repository: ghcr.io/kashalls/external-dns-unifi-webhook
          tag: v0.4.3@sha256:1a58193c2c1985f4ce5ef4031be38d740daa4b1c54b0edbd2299524504e8d60e
        env:
          - name: UNIFI_HOST
            value: https://unifi.internal
        livenessProbe:
          httpGet:
            path: /healthz
            port: http-webhook
          initialDelaySeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /readyz
            port: http-webhook
          initialDelaySeconds: 10
          timeoutSeconds: 5
    serviceMonitor:
      enabled: true
    sources: ["gateway-httproute", "service"]
    triggerLoopOnEvent: true
    txtOwnerId: k8s
    txtPrefix: k8s.
  postRenderers:
    - kustomize:
        patches:
          - target:
              kind: Deployment
            patch: |
              - op: add
                path: /spec/template/spec/containers/1/envFrom
                value:
                  - secretRef:
                      name: external-dns-unifi-secret



---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app external-dns-cloudflare
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      external-dns-unifi:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          webhook:
            image:
              repository: ghcr.io/kashalls/external-dns-unifi-webhook
              tag: v0.4.3@sha256:1a58193c2c1985f4ce5ef4031be38d740daa4b1c54b0edbd2299524504e8d60e
            env:
              UNIFI_HOST: https://unifi.internal
            envFrom:
              - secretRef:
                  name: external-dns-unifi-secret
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz
                    port: &port 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /readyz
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
            resources: &resources
              requests:
                cpu: 10m
              limits:
                memory: 64Mi
            restartPolicy: Always
        containers:
          app:
            image:
              repository: ghcr.io/buroa/external-dns
              tag: a6243325@sha256:a14e69d5c49fdca31693c7c1257f8d2da885a7429bf983f9a36b6e72068cf6db
            args:
              - --domain-filter=ktwo.io
              - --events
              - --interval=1m
              - --log-format=text
              - --log-level=info
              - --policy=sync
              - --provider=webhook
              - --registry=txt
              - --source=gateway-httproute
              - --source=service
              - --txt-owner-id=k8s
              - --txt-prefix=k8s.
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthz
                    port: &port 7979
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources: *resources
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    serviceAccount:
      create: true
      name: *app
    serviceMonitor:
      app:
        serviceName: *app
        endpoints:
          - port: http
