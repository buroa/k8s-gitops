---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: n8n
  namespace: home
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    initContainers:
      01-init-db:
        image: ghcr.io/onedr0p/postgres-initdb:14.7
        imagePullPolicy: IfNotPresent
        envFrom:
          - secretRef:
              name: n8n-secret
    controller:
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      repository: ghcr.io/n8n-io/n8n
      tag: 0.222.0
    command: ["n8n"]
    env:
      GENERIC_TIMEZONE: "${TIMEZONE}"
      WEBHOOK_URL: https://n8n.${SECRET_PUBLIC_DOMAIN}
      N8N_USER_FOLDER: /config
      N8N_PORT: &port 80
      N8N_EMAIL_MODE: smtp
      N8N_SMTP_HOST: smtp-relay.networking.svc.cluster.local
      N8N_SMTP_PORT: 2525
      N8N_SMTP_SENDER: n8n@${SECRET_PUBLIC_DOMAIN}
      N8N_METRICS: true
    envFrom:
      - secretRef:
          name: n8n-secret
    service:
      main:
        ports:
          http:
            port: *port
    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /healthz
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false
    ingress:
      main:
        enabled: true
        annotations:
          kubernetes.io/tls-acme: "true"
          kubernetes.io/ingress.class: contour
          cert-manager.io/cluster-issuer: letsencrypt-prod
          ingress.kubernetes.io/force-ssl-redirect: "true"
          projectcontour.io/websocket-routes: "/"
          hajimari.io/icon: mdi:workflow
        hosts:
          - host: &host n8n.${SECRET_PUBLIC_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: n8n-tls
            hosts:
              - *host
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
    persistence:
      config:
        enabled: true
        existingClaim: n8n-config
    resources:
      requests:
        cpu: 10m
        memory: 200Mi
      limits:
        memory: 1000Mi
