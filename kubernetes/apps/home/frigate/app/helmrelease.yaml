---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app frigate
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      frigate:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/blakeblackshear/frigate
              tag: 0.13.2@sha256:2906991ccad85035b176941f9dedfd35088ff710c39d45ef1baa9a49f2b16734
            env:
              OPENCV_LOG_LEVEL: FATAL
              TZ: ${TIMEZONE}
            envFrom:
              - secretRef:
                  name: frigate-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/version
                    port: &port 5000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 100m
              limits:
                gpu.intel.com/i915: 1
                squat.ai/coral: 1
                memory: 8Gi
    defaultPodOptions:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - plex
              topologyKey: kubernetes.io/hostname
      annotations:
        k8s.v1.cni.cncf.io/networks: |
          [{
            "name": "multus-iot",
            "namespace": "networking",
            "ips": ["192.168.30.201/24"]
          }]
      nodeSelector:
        google.feature.node.kubernetes.io/coral: "true"
        intel.feature.node.kubernetes.io/gpu: "true"
      securityContext:
        supplementalGroups:
          - 20
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
          rtsp:
            port: 8554
    ingress:
      app:
        className: internal
        annotations:
          hajimari.io/icon: cbi:frigate
          hajimari.io/url: https://nvr.${PUBLIC_DOMAIN}
        hosts:
          - host: &host "{{ .Release.Name }}.${PUBLIC_DOMAIN}"
            paths: &paths
              - path: /
                service:
                  identifier: app
                  port: http
          - host: &customHost nvr.${PUBLIC_DOMAIN}
            paths: *paths
        tls:
          - hosts:
              - *host
              - *customHost
    persistence:
      cache:
        type: emptyDir
        medium: Memory
        sizeLimit: 4Gi
        globalMounts:
          - path: /dev/shm
      config:
        existingClaim: *app
      config-file:
        type: secret
        name: frigate-secret
        globalMounts:
          - path: /config/config.yml
            subPath: config.yml
            readOnly: true
      media:
        existingClaim: frigate-media
      tmp:
        type: emptyDir
