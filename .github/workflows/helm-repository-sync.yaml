---
name: Helm Repository Sync

on:
  pull_request:
    branches: ["master"]
    paths: ["kubernetes/**/helmrelease.yaml"]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  extract-helm-repositories:
    name: Extract Helm Repositories
    runs-on: ubuntu-latest
    outputs:
      repositories: ${{ steps.extract-helm-repositories.outputs.repositories }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          files: kubernetes/**/helmrelease.yaml

      - name: Extract Helm Repositories
        id: extract-helm-repositories
        env:
          FILTER: '[.spec.chart.spec.sourceRef] | unique | .[] | ["\(.namespace)/\(.name)"]'
        run: |
          repositories=$(yq --indent 0 --output-format json eval-all "${FILTER}" \
              ${{ steps.changed-files.outputs.all_changed_and_modified_files }}
          )
          echo "repositories=${repositories}" >> $GITHUB_OUTPUT

  helm-repository-sync:
    needs: extract-helm-repositories
    name: Helm Repository Sync
    runs-on: k8s-gitops-runner
    if: ${{ needs.extract-helm-repositories.outputs.repositories != '[]' }}
    strategy:
      matrix:
        repositories: ${{ fromJSON(needs.extract-helm-repositories.outputs.repositories) }}
      max-parallel: 4
      fail-fast: false
    steps:
      - name: Install flux
        run: curl -fsSL https://fluxcd.io/install.sh | bash

      - name: Sync Helm Repository
        run: |
          IFS='/' read -r namespace repository <<< "${{ matrix.repositories }}"
          flux --namespace ${namespace} reconcile source helm ${repository}
