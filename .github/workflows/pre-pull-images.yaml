---
name: Pre-pull Images

on:
  pull_request:
    branches: ["master"]
    paths: ["kubernetes/**"]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  extract-images:
    name: Extract Images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branches: ["default", "pull"]
      fail-fast: false
    outputs:
      default: ${{ steps.output-images.outputs.default }}
      pull: ${{ steps.output-images.outputs.pull }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: "${{ matrix.branches == 'default' && github.event.repository.default_branch || '' }}"

      - name: Gather Images
        uses: docker://ghcr.io/allenporter/flux-local:v7.2.0
        with:
          args: >-
            get cluster
            --all-namespaces
            --path /github/workspace/kubernetes/flux/cluster
            --enable-images
            --only-images
            --output json
            --output-file images.json

      - name: Output Images
        id: output-images
        run: echo "${{ matrix.branches }}=$(jq --compact-output '.' images.json)" >> $GITHUB_OUTPUT

  compare-images:
    needs: extract-images
    name: Compare Images
    runs-on: ubuntu-latest
    if: ${{ needs.extract-images.outputs.default != needs.extract-images.outputs.pull }}
    outputs:
      images: ${{ steps.compare-images.outputs.images }}
    steps:
      - name: Compare Images
        id: compare-images
        run: |
          images=$(jq --compact-output --null-input \
              --argjson f1 '${{ needs.extract-images.outputs.default }}' \
              --argjson f2 '${{ needs.extract-images.outputs.pull }}' \
              '$f2 - $f1' \
          )
          echo "images=${images}" >> $GITHUB_OUTPUT

  pre-pull-images:
    needs: compare-images
    name: Pre-pull Images
    runs-on: k8s-gitops-runner
    if: ${{ needs.compare-images.outputs.images != '[]' }}
    strategy:
      matrix:
        images: ${{ fromJSON(needs.compare-images.outputs.images) }}
      max-parallel: 4
      fail-fast: false
    steps:
      - name: Install talosctl
        run: curl -fsSL https://talos.dev/install | sh

      - name: Pre-pull Image
        run: talosctl --nodes $NODE image pull ${{ matrix.images }}
