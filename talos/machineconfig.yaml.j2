---
version: v1alpha1
machine:
  ca:
    crt: op://K8s/talos/MACHINE_CA_CRT
    {% if machinetype == 'controlplane' %}
    key: op://K8s/talos/MACHINE_CA_KEY
    {% endif %}
  features:
    apidCheckExtKeyUsage: true
    diskQuotaSupport: true
    hostDNS:
      enabled: true
      forwardKubeDNSToHost: false
      resolveMemberNames: true
    kubePrism:
      enabled: true
      port: 7445
    {% if machinetype == 'controlplane' %}
    kubernetesTalosAPIAccess:
      enabled: true
      allowedRoles:
        - os:admin
      allowedKubernetesNamespaces:
        - actions-runner-system
        - system-upgrade
    {% endif %}
    rbac: true
    stableHostname: true
  files:
    - op: create
      path: /etc/cri/conf.d/20-customization.part
      content: |
        [plugins."io.containerd.cri.v1.images"]
          discard_unpacked_layers = false
        [plugins."io.containerd.cri.v1.runtime"]
          cdi_spec_dirs = ["/var/cdi/static", "/var/cdi/dynamic"]
          device_ownership_from_security_context = true
    - op: overwrite
      path: /etc/nfsmount.conf
      permissions: 0o644
      content: |
        [ NFSMount_Global_Options ]
        nfsvers=4.1
        hard=True
        nconnect=8
        noatime=True
        rsize=1048576
        wsize=1048576
  install:
    image: factory.talos.dev/metal-installer/1870a4bc9362fda89df81278894241c5c9beced58cee7485ee7fd7ebff71d131:v1.11.2
  kernel:
    modules:
      - name: nbd
  kubelet:
    defaultRuntimeSeccompProfileEnabled: true
    disableManifestsDirectory: true
    extraConfig:
      featureGates:
        ImageVolume: true
        ResourceHealthStatus: true
      serializeImagePulls: false
    image: ghcr.io/siderolabs/kubelet:v1.34.1
    nodeIP:
      validSubnets:
        - 192.168.10.0/24
  network:
    interfaces:
      - interface: bond0
        bond:
          deviceSelectors:
            - hardwareAddr: 58:47:ca:7f:*
              driver: i40e
          lacpRate: fast
          miimon: 1000
          mode: 802.3ad
          xmitHashPolicy: layer3+4
        dhcp: true
        mtu: 9000
        vlans:
          - # IOT
            vlanId: 30
            dhcp: false
            mtu: 9000
  nodeLabels:
    node.kubernetes.io/gpu: "true"
    topology.kubernetes.io/region: k8s
    topology.kubernetes.io/zone: {{ 'm' if machinetype == 'controlplane' else 'w' }}
  sysctls:
    fs.inotify.max_user_watches: 1048576   # Watchdog
    fs.inotify.max_user_instances: 8192    # Watchdog
    net.core.default_qdisc: fq             # 10Gb/s
    net.core.rmem_max: 67108864            # 10Gb/s | Cloudflared / QUIC
    net.core.wmem_max: 67108864            # 10Gb/s | Cloudflared / QUIC
    net.ipv4.tcp_congestion_control: bbr   # 10Gb/s
    net.ipv4.tcp_fastopen: 3               # Send and accept data in the opening SYN packet
    net.ipv4.tcp_mtu_probing: 1            # 10Gb/s | Jumbo frames
    net.ipv4.tcp_rmem: 4096 87380 33554432 # 10Gb/s
    net.ipv4.tcp_wmem: 4096 65536 33554432 # 10Gb/s
    net.ipv4.tcp_window_scaling: 1         # 10Gb/s
    sunrpc.tcp_slot_table_entries: 128     # 10Gb/s | NFS
    sunrpc.tcp_max_slot_table_entries: 128 # 10Gb/s | NFS
    user.max_user_namespaces: 11255        # User Namespaces
  token: op://K8s/talos/MACHINE_TOKEN
  type: {{ machinetype }}
cluster:
  ca:
    crt: op://K8s/talos/CLUSTER_CA_CRT
    {% if machinetype == 'controlplane' %}
    key: op://K8s/talos/CLUSTER_CA_KEY
    {% endif %}
  clusterName: k8s
  controlPlane:
    endpoint: https://k8s.internal:6443
  discovery:
    enabled: true
    registries:
      kubernetes:
        disabled: true
      service:
        disabled: false
  id: op://K8s/talos/CLUSTER_ID
  network:
    cni:
      name: none
    dnsDomain: cluster.local
    podSubnets:
      - 10.244.0.0/16
    serviceSubnets:
      - 10.245.0.0/16
  secret: op://K8s/talos/CLUSTER_SECRET
  token: op://K8s/talos/CLUSTER_TOKEN
  {% if machinetype == 'controlplane' %}
  aggregatorCA:
    crt: op://K8s/talos/CLUSTER_AGGREGATORCA_CRT
    key: op://K8s/talos/CLUSTER_AGGREGATORCA_KEY
  allowSchedulingOnControlPlanes: true
  apiServer:
    certSANs:
      - k8s.internal
    disablePodSecurityPolicy: true
    extraArgs:
      enable-aggregator-routing: true
      feature-gates: ImageVolume=true,ResourceHealthStatus=true
    image: registry.k8s.io/kube-apiserver:v1.34.1
  controllerManager:
    extraArgs:
      bind-address: 0.0.0.0
    image: registry.k8s.io/kube-controller-manager:v1.34.1
  coreDNS:
    disabled: true
  etcd:
    advertisedSubnets:
      - 192.168.10.0/24
    ca:
      crt: op://K8s/talos/CLUSTER_ETCD_CA_CRT
      key: op://K8s/talos/CLUSTER_ETCD_CA_KEY
    extraArgs:
      listen-metrics-urls: http://0.0.0.0:2381
  proxy:
    disabled: true
    image: registry.k8s.io/kube-proxy:v1.34.1
  secretboxEncryptionSecret: op://K8s/talos/CLUSTER_SECRETBOXENCRYPTIONSECRET
  scheduler:
    config:
      apiVersion: kubescheduler.config.k8s.io/v1
      kind: KubeSchedulerConfiguration
      profiles:
        - schedulerName: default-scheduler
          plugins:
            score:
              disabled:
                - name: ImageLocality
          pluginConfig:
            - name: PodTopologySpread
              args:
                defaultingType: List
                defaultConstraints:
                  - maxSkew: 1
                    topologyKey: kubernetes.io/hostname
                    whenUnsatisfiable: ScheduleAnyway
    extraArgs:
      bind-address: 0.0.0.0
    image: registry.k8s.io/kube-scheduler:v1.34.1
  serviceAccount:
    key: op://K8s/talos/CLUSTER_SERVICEACCOUNT_KEY
  {% endif %}
---
apiVersion: v1alpha1
kind: EthernetConfig
name: enp5s0f0np0
rings:
  rx: 8160
  tx: 8160
---
apiVersion: v1alpha1
kind: EthernetConfig
name: enp5s0f1np1
rings:
  rx: 8160
  tx: 8160
---
apiVersion: v1alpha1
kind: UserVolumeConfig
name: local-hostpath
provisioning:
  diskSelector:
    match: disk.model == "SAMSUNG MZ1L21T9HCLS-00A07" && !system_disk
  minSize: 1.92TB
---
apiVersion: v1alpha1
kind: WatchdogTimerConfig
device: /dev/watchdog0
timeout: 5m
