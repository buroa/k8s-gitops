---
version: "3"

tasks:

  mount:
    desc: Mount a PersistentVolumeClaim to a temporary pod
    summary: |
      Args:
        ns: Namespace the PVC is in (default: default)
        claim: PVC to mount (required)
    interactive: true
    cmd: |
      kubectl run -n {{.ns}} debug-{{.claim}} -i --tty --rm --image=null --privileged --overrides='
        {
          "apiVersion": "v1",
          "spec": {
            "containers": [
              {
                "name": "debug",
                "image": "ghcr.io/onedr0p/alpine:rolling",
                "command": ["/bin/bash"],
                "stdin": true,
                "stdinOnce": true,
                "tty": true,
                "volumeMounts": [
                  {
                    "name": "config",
                    "mountPath": "/config"
                  }
                ]
              }
            ],
            "volumes": [
              {
                "name": "config",
                "persistentVolumeClaim": {
                  "claimName": "{{.claim}}"
                }
              }
            ],
            "restartPolicy": "Never"
          }
        }'
    requires:
      vars: ["claim"]
    vars:
      ns: '{{.ns | default "default"}}'
    preconditions:
      - { msg: "PVC not found", sh: "kubectl -n {{.ns}} get persistentvolumeclaim {{.claim}}" }

  privileged:
    desc: Run a privileged pod on a node
    summary: |
      Args:
        ns: Namespace the PVC is in (default: default)
        node: The node (required)
    interactive: true
    cmds:
      - |
        kubectl run -n {{.ns}} debug-privileged-{{.node}} -i --tty --rm --image=null --overrides='
          {
            "apiVersion": "v1",
            "spec": {
              "containers": [
                {
                  "name": "debug",
                  "image": "ghcr.io/onedr0p/alpine:rolling",
                  "command": [
                    "/bin/bash"
                  ],
                  "stdin": true,
                  "stdinOnce": true,
                  "tty": true,
                  "securityContext": {
                    "allowPrivilegeEscalation": true,
                    "privileged": true
                  },
                  "volumeMounts": [
                    {
                      "name": "hostfs",
                      "mountPath": "/rootfs"
                    },
                    {
                      "name": "run-containerd",
                      "mountPath": "/run/containerd"
                    }
                  ]
                }
              ],
              "dnsPolicy": "ClusterFirstWithHostNet",
              "hostIPC": true,
              "hostNetwork": true,
              "hostPID": true,
              "nodeName": "{{.node}}",
              "restartPolicy": "Never",
              "volumes": [
                {
                  "name": "hostfs",
                  "hostPath": {
                    "path": "/"
                  }
                },
                {
                  "name": "run-containerd",
                  "hostPath": {
                    "path": "/run/containerd"
                  }
                }
              ]
            }
          }'
    requires:
      vars: ["node"]
    vars:
      ns: '{{.ns | default "default"}}'
    preconditions:
      - { msg: "Node not found", sh: "kubectl -n {{.ns}} get node {{.node}}" }

  delete-pods:
    desc: Deletes pods in a phase
    requires:
      vars: ["phase"]
    cmd: kubectl delete pods --field-selector status.phase={{.phase}} -A --ignore-not-found=true
