---
version: '3'

tasks:

  apply-config:
    desc: Apply Talos configuration to a specific node
    prompt: Apply {{.CONFIG_FILE}} to node {{.NODE}}...?
    cmds:
      - talosctl -n {{.NODE}} apply-config --file {{.CONFIG_FILE}}
    vars:
      NODE: '{{.NODE | default ""}}'
      CONFIG_FILE: '{{.CONFIG_FILE | default ""}}'
    preconditions:
      - test -n "{{.NODE}}" || (echo "Usage: task bootstrap:apply-config NODE=<ip> CONFIG_FILE=<path>" && exit 1)
      - test -n "{{.CONFIG_FILE}}" || (echo "Usage: task bootstrap:apply-config NODE=<ip> CONFIG_FILE=<path>" && exit 1)
      - test -f {{.CONFIG_FILE}}
      - talosctl config info

  talos:
    desc: Bootstrap Talos on the current VIP node
    prompt: Bootstrap Talos on node {{.TARGET_NODE}}...?
    cmds:
      - until talosctl --nodes {{.TARGET_NODE}} bootstrap; do sleep 5; done
      - talosctl kubeconfig --nodes {{.TARGET_NODE}} --force {{.KUBERNETES_DIR}}
    vars:
      VIP_HOSTNAME:
        sh: echo {{.CONTROL_PLANE_ENDPOINT}} | sed -e 's,^https://,,' -e 's,:.*$,,'
      TARGET_NODE:
        sh: dig +short {{.VIP_HOSTNAME}} | tail -1
    preconditions:
      - talosctl config info
      - which dig jq talosctl

  apps:
    desc: Bootstrap Kubernetes Apps
    prompt: Bootstrap Kubernetes Apps ...?
    cmds:
      - kubectl config set-cluster {{.CONTEXT}} --server https://{{.RANDOM_CONTROLLER}}:6443
      - defer: talosctl kubeconfig --nodes {{.RANDOM_CONTROLLER}} --force {{.KUBERNETES_DIR}}
      - echo "Applying external secrets and bootstrapping apps..."
      - op inject --in-file {{.BOOTSTRAP_DIR}}/secrets.yaml.tpl | kubectl apply --server-side --filename -
      - helmfile --file {{.BOOTSTRAP_DIR}}/helmfile.yaml sync --hide-notes
    vars:
      CONTEXT:
        sh: talosctl config info --output json | jq --raw-output '.context'
      RANDOM_CONTROLLER:
        sh: talosctl config info --output json | jq --raw-output '.endpoints[]' | sort -R | head -1
    preconditions:
      - op user get --me
      - talosctl config info
      - talosctl --nodes {{.RANDOM_CONTROLLER}} get machineconfig
      - test -f {{.BOOTSTRAP_DIR}}/helmfile.yaml
      - test -f {{.BOOTSTRAP_DIR}}/secrets.yaml.tpl
      - which helmfile jq kubectl op talosctl

