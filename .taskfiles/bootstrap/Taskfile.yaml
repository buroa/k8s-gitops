---
version: '3'

tasks:

  talos:
    desc: Bootstrap Talos
    prompt: Bootstrap Talos ...?
    cmds:
      - until talosctl --nodes {{.TALOS_CONTROLLER}} bootstrap; do sleep 10; done
      - talosctl kubeconfig --nodes {{.TALOS_CONTROLLER}} --force {{.KUBERNETES_DIR}}
    preconditions:
      - talosctl config info >/dev/null 2>&1

  apps:
    desc: Bootstrap Kubernetes Apps
    prompt: Bootstrap Kubernetes Apps ...?
    cmds:
      - until kubectl wait nodes --for=condition=Ready=False --all --timeout=10m; do sleep 5; done
      - op run --env-file {{.KUBERNETES_DIR}}/bootstrap/bootstrap.env --no-masking -- minijinja-cli {{.KUBERNETES_DIR}}/bootstrap/templates/resources.yaml.j2 | kubectl apply --server-side --filename -
      - helmfile --quiet --file {{.KUBERNETES_DIR}}/bootstrap/helmfile.yaml apply --skip-diff-on-install --suppress-diff
      - helmfile --quiet --file {{.KUBERNETES_DIR}}/bootstrap/helmfile.yaml destroy --selector release=wipe-rook
    env:
      FLUX_GITHUB_PUBLIC_KEYS:
        sh: curl -fsSL https://api.github.com/meta | jq --raw-output '"github.com "+.ssh_keys[]'
      MODEL: SAMSUNG_MZQL23T8HCLS-00A07
      NODE_COUNT:
        sh: talosctl config info --output json | jq --raw-output '.nodes | length'
      VAULT: K8s
    preconditions:
      - op user get --me
      - talosctl config info >/dev/null 2>&1
      - test -f {{.KUBERNETES_DIR}}/bootstrap/bootstrap.env
      - test -f {{.KUBERNETES_DIR}}/bootstrap/helmfile.yaml
      - test -f {{.KUBERNETES_DIR}}/bootstrap/templates/resources.yaml.j2
