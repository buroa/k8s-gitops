---
version: '3'

tasks:

  talos:
    desc: Bootstrap Talos
    prompt: Bootstrap Talos ...?
    cmds:
      - until talosctl --nodes {{.TALOS_CONTROLLER}} bootstrap; do sleep 10; done
      - talosctl kubeconfig --nodes {{.TALOS_CONTROLLER}} --force {{.KUBERNETES_DIR}}
    vars:
      TALOS_CONTROLLER:
        sh: talosctl config info --output json | jq --raw-output '.endpoints[]' | shuf -n 1
    preconditions:
      - talosctl config info
      - which talosctl

  apps:
    desc: Bootstrap Kubernetes Apps
    prompt: Bootstrap Kubernetes Apps ...?
    cmds:
      - kubectl config set-cluster {{.TALOS_CONTEXT}} --server https://{{.TALOS_CONTROLLER}}:6443
      - defer: talosctl kubeconfig --nodes {{.TALOS_CONTROLLER}} --force {{.KUBERNETES_DIR}}
      - until kubectl wait nodes --for=condition=Ready=False --all --timeout=10m; do sleep 5; done
      - op inject --in-file {{.KUBERNETES_DIR}}/bootstrap/resources/secrets.yaml.tpl | kubectl apply --server-side --filename -
      - helmfile --file {{.KUBERNETES_DIR}}/bootstrap/helmfile.yaml apply --skip-diff-on-install --suppress-diff
    vars:
      TALOS_CONTEXT:
        sh: talosctl config info --output json | jq --raw-output '.context'
      TALOS_CONTROLLER:
        sh: talosctl config info --output json | jq --raw-output '.endpoints[]' | shuf -n 1
    preconditions:
      - op user get --me
      - talosctl config info
      - test -f {{.KUBERNETES_DIR}}/bootstrap/helmfile.yaml
      - test -f {{.KUBERNETES_DIR}}/bootstrap/resources/secrets.yaml.tpl
      - which helmfile jq kubectl op talosctl
