---
version: "3"

x-env: &env
  disk: "{{.disk}}"
  job: "{{.job}}"
  node: "{{.node}}"
  serial: "{{.serial}}"

vars:
  rookScriptsDir: '{{.ROOT_DIR}}/.taskfiles/Rook/scripts'
  rookTemplatesDir: '{{.ROOT_DIR}}/.taskfiles/Rook/templates'

tasks:

  toolbox:
    desc: Exec into the rook-ceph toolbox
    interactive: true
    cmd: kubectl -n rook-ceph exec -it $(kubectl -n rook-ceph get pod -l "app=rook-ceph-tools" -o jsonpath='{.items[0].metadata.name}') -- bash

  password:
    desc: Retrieve the rook-ceph password
    cmd: kubectl -n rook-ceph get secret rook-ceph-dashboard-password -o jsonpath="{['data']['password']}" | base64 --decode | pbcopy && echo "Copied to clipboard"

  reset:
    desc: Wipe /var/lib/rook on all nodes and specified disk drives
    prompt: This will reset rook-ceph... continue?
    cmds:
      - for: { var: nodes }
        task: .reset-data
        vars:
          node: '{{.ITEM}}'
      - for: ["S6S2NS0TC14873N", "S6S2NS0TC14865L"]
        task: .reset-disk
        vars:
          node: w0
          serial: '{{.ITEM}}'
      - for: ["S6S2NS0TC14871H", "S6S2NS0W122087H"]
        task: .reset-disk
        vars:
          node: w1
          serial: '{{.ITEM}}'
      - for: ["S6S2NS0W120772T", "S6S2NS0TC14864B"]
        task: .reset-disk
        vars:
          node: w2
          serial: '{{.ITEM}}'
    vars:
      nodes: m0 m1 m2 w0 w1 w2

  .reset-disk:
    internal: true
    summary: |
      Args:
        serial: Disk serial to wipe (required)
        node: Node the disk is on (required)
    cmds:
      - envsubst < <(cat {{.rookTemplatesDir}}/wipediskjob.tmpl.yaml) | kubectl apply -f -
      - bash {{.rookScriptsDir}}/wait-for-job.sh {{.job}} default
      - kubectl -n default wait job/{{.job}} --for condition=complete --timeout=1m
      - kubectl -n default logs job/{{.job}}
      - kubectl -n default delete job {{.job}}
    env: *env
    requires:
      vars: ["serial", "node"]
    vars:
      job: wipe-disk-{{.node}}-{{.serial | lower}}
      disk: /dev/disk/by-id/nvme-Samsung_SSD_970_EVO_Plus_2TB_{{.serial}}
    preconditions:
      - test -f {{.rookScriptsDir}}/wait-for-job.sh
      - test -f {{.rookTemplatesDir}}/wipediskjob.tmpl.yaml

  .reset-data:
    internal: true
    summary: |
      Args:
        node: Node the data is on (required)
    cmds:
      - envsubst < <(cat {{.rookTemplatesDir}}/wipedatajob.tmpl.yaml) | kubectl apply -f -
      - bash {{.rookScriptsDir}}/wait-for-job.sh {{.job}} default
      - kubectl -n default wait job/{{.job}} --for condition=complete --timeout=1m
      - kubectl -n default logs job/{{.job}}
      - kubectl -n default delete job {{.job}}
    env: *env
    requires:
      vars: ["node"]
    vars:
      job: wipe-data-{{.node}}
    preconditions:
      - test -f {{.rookScriptsDir}}/wait-for-job.sh
      - test -f {{.rookTemplatesDir}}/wipedatajob.tmpl.yaml
